version: '3'

services:
  postgres:
    image: postgres:alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data:Z
      - backup_postgres:/data/backup_postgres:z,ro
    networks:
      - postgres
    env_file:
      - postgres.env

  redis:
    image: redis:alpine
    restart: always
    networks:
      - nextcloud

  nextcloud-app:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - OVERWRITEPROTOCOL=https
    env_file:
      - postgres.env
    depends_on:
      - postgres
      - redis
    networks:
      - nextcloud
      - postgres

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:z,ro
    env_file:
      - web.env
    depends_on:
      - nextcloud-app
      - proxy
    networks:
      - proxy-tier
      - postgres
      - nextcloud

  nextcloud-cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
    entrypoint: /cron.sh
    depends_on:
      - postgres
      - redis
    networks:
      - postgres
      - nextcloud

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:z,ro
      - vhost.d:/etc/nginx/vhost.d:z
      - html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/tmp/docker.sock:z,ro
    networks:
      - proxy-tier

  letsencrypt:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs:z
      - acme:/etc/acme.sh:z
      - vhost.d:/etc/nginx/vhost.d:z
      - html:/usr/share/nginx/html:z
      - /var/run/docker.sock:/var/run/docker.sock:z,ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

  wireguard-private:
    image: weejewel/wg-easy
    restart: always
    env_file:
      - wireguard.env
    volumes:
      - wireguard_config_private:/etc/wireguard
    network_mode: host
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

  wireguard-public:
    image: weejewel/wg-easy
    restart: always
    environment:
      - WG_PORT=51822
      - PORT=51823
    env_file:
      - wireguard.env
    volumes:
      - wireguard_config_public:/etc/wireguard
    ports:
      - 51822:51820/udp
      - 51823:51823/tcp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  dyndns:
    build: ./dyndns
    restart: always
    env_file:
      - dyndns.env

  backup:
    build: ./backup
    hostname: home-server-backup
    restart: always
    env_file:
      - backup.env
      - postgres.env
    volumes:
      - backup_postgres:/data/backup_postgres:z
      - backup_logs:/data/backup_logs
      - wireguard_config_private:/data/wireguard_config_private:z,ro
      - wireguard_config_public:/data/wireguard_config_public:z,ro
      - nextcloud:/data/nextcloud:z,ro
      - certs:/data/certs:z,ro
      - vhost.d:/data/vhost.d:z,ro
      - html:/data/html:z,ro
      - acme:/data/acme.sh:z,ro
      - deluge_config:/data/deluge_config:z,ro
      - jellyfin_config:/data/jellyfin_config:z,ro
    networks:
      - postgres

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    restart: always
    volumes:
      - deluge_config:/config:z
      - deluge_dowloads:/downloads:z
    ports:
      - 58846:58846 # daemon
      - 8112:8112 # web ui
      - 43289:43289 # data
      - 43289:43289/udp # data

  jellyfin:
    image: jellyfin/jellyfin
    restart: always
    ports:
      - 8096:8096
    volumes:
      - jellyfin_config:/config:z
      - jellyfin_cache:/cache
      - deluge_dowloads:/media:z,ro

  nominatim:
    build: ./nominatim
    restart: always
    ports:
      - 8081:8080
    networks:
      - proxy-tier
    depends_on:
      - proxy
    environment:
      - VIRTUAL_HOST=nominatim.sad.bz
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=nominatim.sad.bz
      - PBF_URL=https://download.geofabrik.de/europe/austria-latest.osm.pbf
      - REPLICATION_URL=https://download.geofabrik.de/europe/austria-updates/
    volumes:
      - nominatim:/var/lib/postgresql/14/main
    shm_size: 512mb
    # TODO: cron update

  happy:
    build: https://github.com/Dosenpfand/flask-htmx-bootstrap-example.git
    restart: always
    ports:
      - 8082:80
    networks:
      - proxy-tier
    depends_on:
      - proxy
    environment:
      - VIRTUAL_HOST=happy.sad.bz
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=happy.sad.bz

  # TODO: !
  # zug-lol-staging:
  #   build: https://github.com/Dosenpfand/zug-lol.git#docker
  #   restart: always
  #   ports:
  #     - 8083:80
  #   networks:
  #     - proxy-tier
  #     - postgres
  #   depends_on:
  #     - proxy
  #     - postgres
  #   environment:
  #     - VIRTUAL_HOST=staging.zug.lol
  #     - VIRTUAL_PORT=80
  #     - LETSENCRYPT_HOST=staging.zug.lol

  # TODO: immich.app

volumes:
  postgres:
  nextcloud:
  certs:
  acme:
  vhost.d:
  html:
  wireguard_config_private:
  wireguard_config_public:
  backup_postgres:
  backup_logs:
  deluge_config:
  deluge_dowloads:
  jellyfin_config:
  jellyfin_cache:
  nominatim:


networks:
  proxy-tier:
  postgres:
  nextcloud:
